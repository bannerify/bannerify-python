"""Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT."""

from __future__ import annotations
from .errbadrequest import ErrBadRequestData
from .errfetchimageerror import ErrFetchImageErrorData
from bannerify.types import BaseModel
import bannerify.utils as utils
from typing import TypedDict, Union


class GetV1LivenessResponseBodyTypedDict(TypedDict):
    r"""The configured services and their status"""
    
    status: str
    r"""The status of the server"""
    

class GetV1LivenessResponseBody(BaseModel):
    r"""The configured services and their status"""
    
    status: str
    r"""The status of the server"""
    

GetV1LivenessResponseResponseBodyUnion = Union[ErrBadRequestData, ErrFetchImageErrorData]
r"""The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."""


class GetV1LivenessResponseResponseBody(Exception):
    r"""The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."""
    data: GetV1LivenessResponseResponseBodyUnion

    def __init__(self, data: GetV1LivenessResponseResponseBodyUnion):
        self.data = data

    def __str__(self) -> str:
        return utils.marshal_json(self.data, GetV1LivenessResponseResponseBodyUnion)

